# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  release:
    types: [published]
  watch:
    types: started

env:
  UPLOAD_BUILDINFO: false
  UPLOAD_PACKAGE: false

jobs:
  build_openwrt:
    name: Build OpenWrt firmware
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
          df -h

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          echo 'src-git kenzo https://github.com/kenzok8/openwrt-packages' >> ./feeds.conf.default
          echo 'src-git small https://github.com/kenzok8/small' >> ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_GRUB_IMAGES is not set
          CONFIG_LIBCURL_COOKIES=y
          CONFIG_LIBCURL_FILE=y
          CONFIG_LIBCURL_FTP=y
          CONFIG_LIBCURL_HTTP=y
          CONFIG_LIBCURL_MBEDTLS=y
          CONFIG_LIBCURL_NO_SMB="!"
          CONFIG_LIBCURL_PROXY=y
          # CONFIG_PACKAGE_UnblockNeteaseMusic is not set
          # CONFIG_PACKAGE_UnblockNeteaseMusicGo is not set
          # CONFIG_PACKAGE_autosamba is not set
          CONFIG_PACKAGE_ca-bundle=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_curl=y
          # CONFIG_PACKAGE_etherwake is not set
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_https-dns-proxy=y
          # CONFIG_PACKAGE_iptables-mod-ipsec is not set
          # CONFIG_PACKAGE_kmod-crypto-cbc is not set
          # CONFIG_PACKAGE_kmod-crypto-deflate is not set
          # CONFIG_PACKAGE_kmod-crypto-des is not set
          # CONFIG_PACKAGE_kmod-crypto-echainiv is not set
          # CONFIG_PACKAGE_kmod-crypto-hmac is not set
          # CONFIG_PACKAGE_kmod-crypto-md5 is not set
          # CONFIG_PACKAGE_kmod-ipsec is not set
          # CONFIG_PACKAGE_kmod-ipt-ipsec is not set
          # CONFIG_PACKAGE_kmod-iptunnel6 is not set
          # CONFIG_PACKAGE_kmod-nf-conntrack-netlink is not set
          # CONFIG_PACKAGE_kmod-tun is not set
          CONFIG_PACKAGE_libcurl=y
          # CONFIG_PACKAGE_libgmp is not set
          # CONFIG_PACKAGE_libhttp-parser is not set
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          # CONFIG_PACKAGE_libminiupnpc is not set
          # CONFIG_PACKAGE_libnatpmp is not set
          # CONFIG_PACKAGE_libnghttp2 is not set
          # CONFIG_PACKAGE_libuv is not set
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-arpbind is not set
          # CONFIG_PACKAGE_luci-app-autoreboot is not set
          # CONFIG_PACKAGE_luci-app-ddns is not set
          # CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          CONFIG_PACKAGE_luci-app-passwall=y
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Server is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Server is not set
          # CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus is not set
          # CONFIG_PACKAGE_luci-app-ramfree is not set
          # CONFIG_PACKAGE_luci-app-samba is not set
          # CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_PACKAGE_luci-app-upnp is not set
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          # CONFIG_PACKAGE_luci-app-wol is not set
          # CONFIG_PACKAGE_luci-app-xlnetacc is not set
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          CONFIG_PACKAGE_luci-theme-netgear=y
          # CONFIG_PACKAGE_miniupnpd is not set
          # CONFIG_PACKAGE_nlbwmon is not set
          # CONFIG_PACKAGE_node is not set
          # CONFIG_PACKAGE_shadowsocksr-libev-server is not set
          CONFIG_PACKAGE_ssocks=y
          CONFIG_PACKAGE_ssocksd=y
          # CONFIG_PACKAGE_strongswan is not set
          CONFIG_PACKAGE_trojan-go=y
          CONFIG_PACKAGE_unzip=y
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_vsftpd-alt is not set
          # CONFIG_PACKAGE_wol is not set
          # CONFIG_PACKAGE_zerotier is not set
          CONFIG_TROJAN_GO_COMPRESS_UPX=y
          # CONFIG_VMDK_IMAGES is not set
          CONFIG_PACKAGE_SAMBA_MAX_DEBUG_LEVEL=-1
          # CONFIG_PACKAGE_luci-i18n-samba-ca is not set
          # CONFIG_PACKAGE_luci-i18n-samba-cs is not set
          # CONFIG_PACKAGE_luci-i18n-samba-de is not set
          # CONFIG_PACKAGE_luci-i18n-samba-el is not set
          # CONFIG_PACKAGE_luci-i18n-samba-en is not set
          # CONFIG_PACKAGE_luci-i18n-samba-es is not set
          # CONFIG_PACKAGE_luci-i18n-samba-fr is not set
          # CONFIG_PACKAGE_luci-i18n-samba-he is not set
          # CONFIG_PACKAGE_luci-i18n-samba-hu is not set
          # CONFIG_PACKAGE_luci-i18n-samba-it is not set
          # CONFIG_PACKAGE_luci-i18n-samba-ja is not set
          # CONFIG_PACKAGE_luci-i18n-samba-ms is not set
          # CONFIG_PACKAGE_luci-i18n-samba-no is not set
          # CONFIG_PACKAGE_luci-i18n-samba-pl is not set
          # CONFIG_PACKAGE_luci-i18n-samba-pt is not set
          # CONFIG_PACKAGE_luci-i18n-samba-pt-br is not set
          # CONFIG_PACKAGE_luci-i18n-samba-ro is not set
          # CONFIG_PACKAGE_luci-i18n-samba-ru is not set
          # CONFIG_PACKAGE_luci-i18n-samba-sk is not set
          # CONFIG_PACKAGE_luci-i18n-samba-sv is not set
          # CONFIG_PACKAGE_luci-i18n-samba-tr is not set
          # CONFIG_PACKAGE_luci-i18n-samba-uk is not set
          # CONFIG_PACKAGE_luci-i18n-samba-vi is not set
          # CONFIG_PACKAGE_luci-i18n-samba-zh is not set
          # CONFIG_PACKAGE_luci-i18n-samba-zh-tw is not set
          CONFIG_PACKAGE_samba36-server=y
          CONFIG_PACKAGE_wsdd2=y
          EOF
          
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "3i uci set network.lan.ipaddr='10.10.10.11'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "4i uci set network.lan.gateway='10.10.10.10'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "5i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        if: env.UPLOAD_BUILDINFO == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        if: env.UPLOAD_PACKAGE == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
  
      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
